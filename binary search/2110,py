# https://www.acmicpc.net/board/view/68623
N, C = map(int,input().split())

union = []
for i in range(N):
    union.append(int(input()))
    
union.sort()
cmake = C-2

def count(mid):
    cnt = 1
    start = union[0]
    for i in range(1,N):
        if  mid <= union[i] - start:
            start = union[i]
            cnt+=1
    return cnt
# 1 2 4 8 9
def solve(start, end):
    if start>end:
        return 0
    
    elif start == end:
        ret = count(start)
        if ret < C:
            return -1

        return ret
    
    mid = (start + end) // 2
    cnt = count(mid)

    if cnt >= C: # mid 늘려줘야한다.
        ret = solve(mid+1, end)
        if ret == -1:
            ret = mid
        return ret
    elif cnt < C:
        return solve(start, mid-1)
        
if C == 2:
    print(union[-1]-union[0])
else:
    print(solve(1,union[-1]-union[0]))